{"version":3,"sources":["hooks/useInputState.js","Components/WishForm.js","Components/EditWishForm.js","Components/Wish.js","hooks/useToggleState.js","Components/WishList.js","hooks/useWishesState.js","context/wishes.context.js","Components/WishListApp.js","App.js","serviceWorker.js","index.js"],"names":["initialValue","useState","value","setValue","event","target","WishForm","addWish","useInputState","handleChange","reset","Paper","style","margin","padding","onSubmit","preventDefault","TextField","onChange","label","fullWidth","EditWishForm","content","id","editWish","toggleIsEditing","marginLeft","width","autoFocus","Wish","done","toggleWish","deleteWish","state","setState","toggle","useToggleState","isEditing","ListItem","height","FormGroup","FormControlLabel","control","Checkbox","icon","checkedIcon","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","WishList","wishes","List","map","wish","index","key","length","Divider","initialWishes","setWishes","newWishText","uuid","link","wishId","filter","defaultWishes","WishesContext","createContext","WishesProvider","props","useWishesState","Provider","children","WishListApp","initialWishesArray","useEffect","window","localStorage","setItem","JSON","stringify","backgroundImage","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21329762.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = event => setValue(event.target.value);\r\n\r\n  const reset = () => setValue(\"\");\r\n\r\n  return [value, handleChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function WishForm({ addWish }) {\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n\r\n  return (\r\n    <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\r\n      <form\r\n        onSubmit={event => {\r\n          // prevent the default request to refresh the page\r\n          event.preventDefault();\r\n          addWish(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          label=\"What do you wish for?\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function EditWishForm({\r\n  content,\r\n  id,\r\n  editWish,\r\n  toggleIsEditing\r\n}) {\r\n  const [value, handleChange, reset] = useInputState(content);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        editWish(id, value);\r\n        reset();\r\n        toggleIsEditing();\r\n      }}\r\n      style={{ marginLeft: \"3rem\", width: \"80%\" }}\r\n    >\r\n      <TextField\r\n        value={value}\r\n        onChange={handleChange}\r\n        margin=\"normal\"\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport EditWishForm from \"./EditWishForm\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nexport default function Wish({\r\n  content,\r\n  done,\r\n  id,\r\n  toggleWish,\r\n  deleteWish,\r\n  editWish\r\n}) {\r\n  const [isEditing, toggleIsEditing] = useToggleState(false);\r\n\r\n  return (\r\n    <ListItem style={{ height: \"64px\" }}>\r\n      {isEditing ? (\r\n        <EditWishForm\r\n          content={content}\r\n          editWish={editWish}\r\n          id={id}\r\n          toggleIsEditing={toggleIsEditing}\r\n        />\r\n      ) : (\r\n        <>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  icon={<FavoriteBorder />}\r\n                  checkedIcon={<Favorite />}\r\n                  checked={done}\r\n                  onClick={() => toggleWish(id)}\r\n                />\r\n              }\r\n            />\r\n          </FormGroup>\r\n          <ListItemText style={{ textDecoration: done && \"line-through\" }}>\r\n            {content}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton aria-label=\"edit\" onClick={() => toggleIsEditing()}>\r\n              <EditIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"delete\" onClick={() => deleteWish(id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useToggle(initialValue = false) {\r\n  const [state, setState] = useState(initialValue);\r\n\r\n  const toggle = () => {\r\n    setState(!state);\r\n  };\r\n  return [state, toggle];\r\n}\r\n","import React from \"react\";\r\nimport Wish from \"./Wish\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport default function WishList({ wishes, toggleWish, deleteWish, editWish }) {\r\n  return (\r\n    <Paper>\r\n      <List>\r\n        {wishes.map((wish, index) => (\r\n          <div key={wish.id}>\r\n            <Wish\r\n              {...wish}\r\n              toggleWish={toggleWish}\r\n              deleteWish={deleteWish}\r\n              editWish={editWish}\r\n            />\r\n            {/* only render a Divider if the index of\r\n            this individual wish is not the last one */}\r\n            {index < wishes.length - 1 && <Divider />}\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nexport default initialWishes => {\r\n  const [wishes, setWishes] = useState(initialWishes);\r\n  return {\r\n    wishes,\r\n    addWish: newWishText => {\r\n      setWishes([\r\n        ...wishes,\r\n        {\r\n          id: uuid(),\r\n          content: newWishText,\r\n          done: false,\r\n          link: \"\"\r\n        }\r\n      ]);\r\n    },\r\n    deleteWish: wishId => {\r\n      setWishes(wishes.filter(wish => wish.id !== wishId));\r\n    },\r\n    toggleWish: wishId => {\r\n      setWishes(\r\n        wishes.map(wish =>\r\n          wish.id === wishId ? { ...wish, done: !wish.done } : wish\r\n        )\r\n      );\r\n    },\r\n    editWish: (wishId, newWishText) => {\r\n      setWishes(\r\n        wishes.map(wish =>\r\n          wish.id === wishId ? { ...wish, content: newWishText } : wish\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n","import React, { createContext } from \"react\";\r\nimport useWishesState from \"../hooks/useWishesState\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst defaultWishes = [\r\n  {\r\n    id: uuid(),\r\n    content: \"Audio-Technica ATH-M50x Headphones\",\r\n    done: false,\r\n    link:\r\n      \"https://www.audio-technica.com/cms/headphones/99aff89488ddd6b1/index.html\"\r\n  },\r\n  {\r\n    id: uuid(),\r\n    content: \"Celeste Mountain on Steam\",\r\n    done: false,\r\n    link: \"https://store.steampowered.com/app/504230/Celeste/\"\r\n  }\r\n];\r\n\r\nexport const WishesContext = createContext();\r\n// provider calls our custom hook to set up the initial wishes object\r\nexport function WishesProvider(props) {\r\n  const { wishes, addWish, deleteWish, toggleWish, editWish } = useWishesState(\r\n    defaultWishes\r\n  );\r\n  return (\r\n    //   return a provider wrapper\r\n    <WishesContext.Provider\r\n      // pass the wishes object as a value so any children can consume it\r\n      value={(wishes, addWish, deleteWish, toggleWish, editWish)}\r\n    >\r\n      {props.children}\r\n    </WishesContext.Provider>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport WishForm from './WishForm';\r\nimport WishList from './WishList';\r\nimport useWishesState from '../hooks/useWishesState';\r\nimport { WishesProvider } from '../context/wishes.context';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport uuid from 'uuid/v4';\r\n\r\nexport default function WishListApp() {\r\n  const initialWishesArray = [\r\n    {\r\n      id: uuid(),\r\n      content: 'Audio-Technica ATH-M50x Headphones',\r\n      done: false,\r\n      link: 'https://www.audio-technica.com/cms/headphones/99aff89488ddd6b1/index.html'\r\n    },\r\n    {\r\n      id: uuid(),\r\n      content: 'Celeste Mountain on Steam',\r\n      done: false,\r\n      link: 'https://store.steampowered.com/app/504230/Celeste/'\r\n    },\r\n\r\n    {\r\n      id: uuid(),\r\n      content: 'Dreamland Alaskan Husky Faux Fur Heated Throw',\r\n      done: false,\r\n      link: 'http://www.dreamlandworld.com/products/relaxwell-faux-fur-heated-throw/'\r\n    },\r\n    {\r\n      id: uuid(),\r\n      content: 'House of Leaves',\r\n      done: true,\r\n      link: 'https://www.barnesandnoble.com/w/house-of-leaves-mark-z-danielewski/1103027816#/'\r\n    }\r\n  ];\r\n\r\n  // const wishesLength = JSON.parse(localStorage.getItem('wishes')).length;\r\n  const wishesLength = 0;\r\n\r\n  const initialWishes =\r\n    wishesLength > 0\r\n      ? // if there are any wishes, render them\r\n        JSON.parse(window.localStorage.getItem('wishes'))\r\n      : // otherwise, in case the user deleted all, reload hardcoded wishes from\r\n        // initialWishesArray upon refresh so it won't start as empty\r\n        initialWishesArray;\r\n\r\n  const { wishes, addWish, deleteWish, toggleWish, editWish } = useWishesState(initialWishes);\r\n\r\n  useEffect(\r\n    () => {\r\n      // sync wishes to localStorage by saving them under the key of \"wishes\"\r\n      // since wishes are objects, and localStorage needs a string,\r\n      // we need to explicitly convert them into strings, in order to avoid\r\n      // the JS Engline implicitly calling .toString() on the objects\r\n      window.localStorage.setItem('wishes', JSON.stringify(wishes));\r\n    },\r\n    [ wishes ]\r\n  );\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        height: '100vh',\r\n        backgroundImage: 'linear-gradient(to right top, #d1bebc, #d2c0c1, #c5b0ba, #b2a3b6, #9798b2, #768faa)',\r\n        padding: 0,\r\n        margin: 0\r\n      }}\r\n      elevation={0}\r\n    >\r\n      {/* use Paper Component as a reusable container to provide us with a background color */}\r\n      <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n        {/* AppBar, Toolbar, and Typography Components are from the material-ui docs */}\r\n        <Toolbar>\r\n          <Typography color='inherit'>Wishes</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify='center' style={{ marginTop: '1rem' }}>\r\n        <Grid item xs={11} md={9} lg={5}>\r\n          <WishesProvider>\r\n            <WishForm addWish={addWish} />\r\n            <WishList wishes={wishes} toggleWish={toggleWish} deleteWish={deleteWish} editWish={editWish} />\r\n          </WishesProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WishListApp from \"./Components/WishListApp\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return <WishListApp />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}